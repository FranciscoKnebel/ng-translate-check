import { readFile } from 'fs';
import keysDiff from 'keys-diff';

import { mapToJson, mapToObj } from '../utils/dictionary';
import { writeJsonOrStdout } from '../utils/files';

export default function (program) {
  program
    .command('diff <path>')
    .option('--base <index>', 'Diff to language with base <index>. Negative index compares all languages.', 0)
    .option('--json <path>', 'Save output to <path> file.')
    .description('Receives a JSON file generated by the files command and shows difference between translation files (missing strings).')
    .action((file, cmd) => {
      const options = {
        file,
        base: cmd.base
      };

      readFile(options.file, 'utf-8', (e, data) => {
        const translationsObj = JSON.parse(data).translationFiles;

        const languages = [];
        for (const lang in translationsObj) {
          if (translationsObj.hasOwnProperty(lang)) {
            // const element = translationsObj[lang];

            languages.push(lang);
          }
        }


        let response;
        if (options.base < 0) {
          // Compares all to all
          response = allLanguagesDiff(languages, translationsObj);
        } else {
          // Compares base language to other languages
          response = baseLanguageDiff(languages, translationsObj, options.base);
        }

        writeJsonOrStdout(cmd.json, response);
      })
    });
}

function diff(languages, translations, base) {
  const baseLang = languages[base];
  
  const responses = [];
  languages.forEach((lang, index) => {
    if (index !== base) {
      console.log(`Getting difference between ${baseLang} and ${lang}.`);

      const diff = keysDiff(translations[baseLang], translations[lang]);

      const response = {};
      response[`base ${baseLang}`] = diff[0];
      response[`compare with ${lang}`] = diff[1];

      responses.push(response);
    }
  });

  return responses;
}

function baseLanguageDiff(languages, translations, base) {
  return diff(languages, translations, base)[0];
}

function allLanguagesDiff(languages, translations) {
  const responses = [];
  let currentLangIndex = 0;

  while (currentLangIndex < languages.length) {
    responses.push(diff(languages, translations, currentLangIndex++));
  }

  return responses;
}